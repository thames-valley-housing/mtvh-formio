!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("Formio")):"function"==typeof define&&define.amd?define(["Formio"],t):"object"==typeof exports?exports.FormioContrib=t(require("Formio")):e.FormioContrib=t(e.Formio)}(window,(function(e){return function(e){var t={};function a(n){if(t[n])return t[n].exports;var l=t[n]={i:n,l:!1,exports:{}};return e[n].call(l.exports,l,l.exports,a),l.l=!0,l.exports}return a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)a.d(n,l,function(t){return e[t]}.bind(null,l));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=8)}([function(t,a){t.exports=e},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t,a="";Array.prototype.join;return a+='<label\n  ref="label"\n  class="col-form-label '+(null==(t=e.label.className)?"":t)+'"\n  for="'+(null==(t=e.instance.id)?"":t)+"-"+(null==(t=e.component.key)?"":t)+'"\n  id="l-'+(null==(t=e.instance.id)?"":t)+"-"+(null==(t=e.component.key)?"":t)+'"\n>\n  '+(null==(t=e.t(e.component.label,{_userInput:!0}))?"":t)+"\n  "+(null==(t=0==e.component.validate.required&&"day"!=e.component.type?'<span class="optional-question">(optional)</span>':"")?"":t)+"\n  ","number"!==e.component.type&&"phoneNumber"!==e.component.type&&"currency"!==e.component.type||(a+="\n    <span class='sr-only'>, "+(null==(t=e.t("numeric only"))?"":t)+",</span>\n  "),a+="\n  ",e.component.tooltip&&(a+='\n    <i ref="tooltip" tabindex="0" class="'+(null==(t=e.iconClass("question-sign"))?"":t)+' text-muted" data-tooltip="'+(null==(t=e.component.tooltip)?"":t)+'"></i>\n  '),a+="\n</label>"}},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t,a="";Array.prototype.join;return e.label.hidden||"bottom"===e.label.labelPosition||(a+="\n  "+(null==(t=e.labelMarkup)?"":t)+"\n"),a+="\n\n",e.label.hidden&&e.label.className&&e.component.validate.required&&(a+='\n  <label class="'+(null==(t=e.label.className)?"":t)+'"></label>\n'),a+="\n\n",e.label.hidden||"bottom"!==e.label.labelPosition||(a+="\n  "+(null==(t=e.labelMarkup)?"":t)+"\n"),a+="\n",e.component.description&&(a+='\n  <div id="d-'+(null==(t=e.instance.id)?"":t)+"-"+(null==(t=e.component.key)?"":t)+'" class="form-text text-muted">'+(null==(t=e.t(e.component.description,{_userInput:!0}))?"":t)+"</div>\n"),a+="\n\n"+(null==(t=e.element)?"":t)}},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t,a="";return a+='<div class="formio-wizard-builder-component-title">'+(null==(t=e.t(e.component.title))?"":t)+"</div>\n"}},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t,a="";return a+='<div class="'+(null==(t=e.className)?"":t)+'">\n  <div class="row">\n    <div class="col-md-12 col-lg-8">\n      <h1>'+(null==(t=e.panels[e.currentPage].title)?"":t)+'</h1> \n    </div>\n  </div>  \n  <div class="row">\n    <div class="col-md-8">\n      <div class="wizard-page" ref="'+(null==(t=e.wizardKey)?"":t)+'">\n        '+(null==(t=e.components)?"":t)+"\n        "+(null==(t=e.wizardNav)?"":t)+'\n      </div>\n    </div>    \n    <div class="col-md-4">\n     '+(null==(t=e.wizardHeader)?"":t)+"\n    </div>\n  </div>\n</div>"}},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t,a="";Array.prototype.join;return a+='<div class="row" id="'+(null==(t=e.wizardKey)?"":t)+'-nav">\n  ',e.buttons.submit&&(a+='\n  <div class="col-md-12"><span><button class="btn btn-primary btn-wizard-nav-submit" ref="'+(null==(t=e.wizardKey)?"":t)+'-submit">'+(null==(t=e.t("submit"))?"":t)+"</button></span></div>\n  "),a+="\n  ",e.buttons.next&&(a+='\n  <div class="col-md-12"><span><button class="btn btn-primary btn-wizard-nav-next" ref="'+(null==(t=e.wizardKey)?"":t)+'-next">'+(null==(t=e.t("next"))?"":t)+"</button></span></div>\n  "),a+="\n</div>"}},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t,a="";Array.prototype.join;return a+='<nav aria-label="navigation" class="card card-lime-light card-side" id="'+(null==(t=e.wizardKey)?"":t)+'-header">\n  <div class="card-body">\n    <h5 class="card-title">Sections</h5>\n    <div class="card-text">\n      <ul class="mtvh-ul">\n        ',e.panels.forEach((function(n,l){a+='\n        <li class="page-item'+(null==(t=e.currentPage===l?" active":"")?"":t)+'">\n          <span ref="'+(null==(t=e.wizardKey)?"":t)+'-link">'+(null==(t=e.t(n.title))?"":t)+"</span>\n        </li>\n        "})),a+="\n      </ul>\n    </div>\n  </div> \n</nav>"}},function(e){e.exports=JSON.parse('{"builder":{"builder":{"custom":{"title":"MTVH Fields","weight":100,"components":{"Address":{"title":"Address","key":"mtvhAddress","icon":"terminal","schema":{"key":"fieldSet3","type":"fieldset","label":"Field Set","input":false,"tableView":false,"components":[{"label":"postcodeSearch","customClass":"d-none","key":"postcodeSearch","logic":[{"name":"postcodeSearch","trigger":{"type":"event","event":"postcodeSearchSubmit"},"actions":[{"name":"postcodeSearch","type":"value","value":"value = data.postCode;"}]},{"name":"postcodeSearchChange","trigger":{"type":"event","event":"postcodeSearchChange"},"actions":[{"name":"postcodeSearchChange","type":"value","value":"value = \'\';"}]}],"type":"hidden","input":true,"tableView":false},{"label":"postcodeSearchURL","customClass":"d-none","redrawOn":"postcodeSearch","calculateValue":"if(data.postcodeSearch!==\'\')\\n{\\n  value = \'https://api.getaddress.io/find/\'+data.postcodeSearch+\'?expand=true&sort=true&api-key=\';\\n}\\nelse\\n{\\n  value = \'\';\\n}","key":"postcodeSearchURL","type":"hidden","input":true,"tableView":false},{"label":"postcodeManual","customClass":"d-none","key":"postcodeManual","logic":[{"name":"Set Value","trigger":{"type":"event","event":"addressManual"},"actions":[{"name":"Set Value","type":"value","value":"value = \'1\';"}]}],"type":"hidden","input":true,"tableView":false},{"label":"Question Title","tag":"div","className":"col-form-label","attrs":[{"attr":"","value":""}],"content":"What is your address?","refreshOnChange":false,"customClass":"mb-0","key":"html1","type":"htmlelement","input":false,"tableView":false},{"html":"<p>We need this information so that we can confirm you are an MTVH resident</p>","label":"Address description","customClass":"mb-1","refreshOnChange":false,"key":"whatIsYourHomeAddress","type":"content","input":false,"tableView":false},{"customClass":"mb-0","key":"fieldSet","customConditional":"show = (data.postcodeSearch===\'\');","type":"fieldset","label":"","input":false,"tableView":false,"components":[{"label":"Postcode","tag":"h5","attrs":[{"attr":"","value":""}],"content":"Postcode","refreshOnChange":false,"customClass":"mb-0","key":"address1","type":"htmlelement","input":false,"tableView":false},{"label":"Postcode","customClass":"mb-3","hideLabel":true,"tableView":true,"case":"uppercase","clearOnHide":false,"validateOn":"blur","validate":{"required":true,"pattern":"([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\\\\s?[0-9][A-Za-z]{2})","customMessage":"Enter a valid postcode","minLength":5,"maxLength":8},"key":"postCode","type":"textfield","input":true},{"label":"Find address","action":"event","showValidations":false,"theme":"secondary","tableView":false,"key":"findAddress","logic":[{"name":"Disable","trigger":{"type":"javascript","javascript":"var postCode = utils.getComponent(instance.parent.components,\'postCode\');\\nif(postCode.error===\'\'||postCode.error===null){\\n  result = false;\\n}"},"actions":[{"name":"Disable","type":"property","property":{"label":"Disabled","value":"disabled","type":"boolean"},"state":true}]}],"type":"button","event":"postcodeSearchSubmit","input":true}]},{"customClass":"mb-0","key":"SelectAddressFieldSet","customConditional":"show = (data.postcodeManual === \'\' && data.postcodeSearchURL!==\'\');","type":"fieldset","label":"","input":false,"tableView":false,"components":[{"label":"postcodeSearchResultsCount","customClass":"d-none","defaultValue":"postcodeSearchResultsCount","redrawOn":"data","calculateValue":"var addressSelect = utils.getComponent(instance.parent.components,\'addressSelect\');\\r\\nconsole.log(addressSelect.selectOptions.length);\\r\\n//console.log(addressSelect);\\r\\nif(addressSelect.selectOptions){\\r\\n  addressSelect.description = addressSelect.selectOptions.length + \' results found\';\\r\\n  value = addressSelect.selectOptions.length;\\r\\n}\\r\\nelse{\\r\\n  value = 0;\\r\\n}","key":"postcodeSearchResultsCount","type":"hidden","input":true,"tableView":false},{"label":"Postcode","tag":"h5","attrs":[{"attr":"","value":""}],"content":"Postcode","refreshOnChange":false,"customClass":"mb-0","key":"postcode","type":"htmlelement","input":false,"tableView":false},{"label":"Change {{data.postcodeSearch}}","action":"event","showValidations":false,"theme":"secondary","tableView":false,"key":"change","type":"button","event":"postcodeSearchChange","input":true},{"label":"HTML","tag":"h5","attrs":[{"attr":"","value":""}],"content":"Select address","refreshOnChange":false,"customClass":"mt-4 mb-0","key":"html","type":"htmlelement","input":false,"tableView":false},{"label":"Result count","attrs":[{"attr":"","value":""}],"content":"{{data.postcodeSearchResultsCount}} results found","refreshOnChange":true,"customClass":"mb-1","key":"resultCount","customConditional":"show = (data.postcodeSearchResultsCount>0)","type":"htmlelement","input":false,"tableView":false},{"label":"HTML","attrs":[{"attr":"","value":""}],"content":"0 results found","refreshOnChange":false,"key":"html2","customConditional":"show = (data.postcodeSearchResultsCount===0||data.postcodeSearchResultsCount===\'\')","type":"htmlelement","input":false,"tableView":false},{"label":"Address Select","widget":"choicesjs","customClass":"mb-3","hideLabel":true,"tableView":false,"dataSrc":"url","data":{"url":"{{data.postcodeSearchURL}}","headers":[{"key":"","value":""}]},"dataType":"auto","template":"<span>{{item.line_1}} {{item.line_2}} {{item.line_3}} {{item.line_4}} {{item.locality}} {{item.town_or_city}}</span>","searchEnabled":false,"persistent":false,"clearOnHide":false,"calculateValue":"console.log(instance);","validate":{"required":true,"custom":"let mtvhEle = document.getElementById(instance.id);\\r\\nlet mList = mtvhEle.getElementsByClassName(\'choices__list\'),\\r\\noptions = {\\r\\n  childList: true\\r\\n},\\r\\nobserver = new MutationObserver(mCallback);\\r\\nconsole.log(mList[2]);\\r\\nfunction mCallback(mutations) {\\r\\n  for (let mutation of mutations) {\\r\\n      console.log(\'Mutation Detected: A child node has been added or removed.\');\\r\\n  }\\r\\n}\\r\\n\\r\\nobserver.observe(mList[2], options);\\r\\nvalid = true;"},"key":"addressSelect","type":"select","selectValues":"addresses","input":true,"disableLimit":false,"keyModified":true,"lazyLoad":false,"ignoreCache":true},{"label":"I can\'t find my address in this list","action":"event","showValidations":false,"theme":"secondary","tableView":false,"key":"iCantFindMyAddressInThisList","type":"button","input":true,"event":"addressManual"}]},{"customClass":"mb-0","key":"ManualAddressFieldSet","customConditional":"show = (data.postcodeManual === \'1\');","type":"fieldset","label":"","input":false,"tableView":false,"components":[{"label":"Address Manual","autoExpand":false,"hideLabel":true,"tableView":true,"clearOnHide":false,"validate":{"required":true,"customMessage":"Enter an address"},"key":"addressManual","type":"textarea","input":true}]},{"label":"Address Formatted","customClass":"d-none","autocomplete":"off","tableView":true,"clearOnHide":false,"calculateValue":"if(data.postcodeManual !== \'1\' && data.addressSelect){\\r\\n  value = [data.addressSelect.line_1,data.addressSelect.line_2,data.addressSelect.line_3,\\r\\ndata.addressSelect.line_4,data.addressSelect.locality,data.addressSelect.town_or_city,data.addressSelect.county,data.addressSelect.district,data.addressSelect.country,data.postcodeSearch].filter(Boolean).join(\', \');\\r\\n}\\r\\nelse if(data.postcodeManual === \'1\'){\\r\\n  value = data.addressManual.replace(/\\\\n/g, \\", \\");\\r\\n}","validate":{"required":true},"key":"addressFormatted","type":"textfield","input":true}]}}}}}}}')},function(e,t,a){"use strict";a.r(t);var n=a(0),l=a(1),s={form:a.n(l).a},o=a(2),r={form:a.n(o).a},i=a(3),d=a.n(i),u=a(4),c={form:a.n(u).a,builder:d.a},p=a(5),m={form:a.n(p).a},f=a(6),b={templates:{bootstrap:{label:s,field:r,wizardNav:m,wizard:c,wizardHeader:{form:a.n(f).a}}},options:a(7)};n.Formio.use(b);t.default=b}]).default}));